image_config: &image_config

  # make sure to set your Docker Hub username & password in CircleCI,
  # either as project-specific environment variables
  # or as resources in your organization's org-global Context

  IMAGE_NAME: sevenide1.0

  IMAGE_TAG: basic

  # NOTE: if you're modifying this config.yml file manually
  # rather than using the included setup script,
  # make sure you also add the values of your IMAGE_NAME & IMAGE_TAG variables
  # to the `test_image` job (line 55)

  LINUX_VERSION: UBUNTU_XENIAL 

  # RUBY_VERSION_NUM: yes

  # NODE_VERSION_NUM: yes

  # PYTHON_VERSION_NUM: yes

  JAVA: false

  MYSQL_CLIENT: false

  POSTGRES_CLIENT: false

  DOCKERIZE: false

  BROWSERS: false

version: 2
jobs:
  build:
    machine: true
    environment:
      <<: *image_config

    steps:
      - checkout


      - run:
          name: Installing git
          command: 'sudo apt-get update && apt-get install -y git-core'
     
      - run: 
          name: Downloading submodules
          command: 'git submodule init && git submodule update --remote'
     
      - run:                                                                   
          name: Installing apt-add-repository
          command: 'apt-get update && apt install -y software-properties-common'

      - run:                                                                   
          name: Installing SUDO
          command: 'apt-get update && apt install -y sudo && rm -rf /var/lib/apt/lists'

      - run:                                                                   
          name: Installing GCC
          command: 'apt-get update && apt-get install -y gcc g++'

      - run:                                                  
          name: Installing CMAKE
          command: 'apt-get update && apt-get install -y cmake'

      - run:                                                  
          name: Installing OpenGL
          command: 'apt-get update && apt-get install -y libglu1-mesa-dev mesa-common-dev libglew-dev'




      - run: bash scripts/generate.sh > Dockerfile

      - run:
             name:"login and pass":
             command: echo ${DOCKER_USERNAME} echo {DOCKER_PASSWORD}           
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - run: docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG .

      - run: docker push $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG && sleep 10

      - store_artifacts:
          path: Dockerfile

  test_image:
    docker:
      - image: $DOCKER_USERNAME/sevenide1.0:basic
        environment:
          <<: *image_config

    steps:
      - checkout

      - run:
          name: start Xvfb for phantomjs test
          # # command: Xvfb :99
          # # background: true

      - run:
          name: bats tests
          command: |
            mkdir -p test_results/bats
            bats scripts/tests.bats | \
            perl scripts/tap-to-junit.sh > \
            test_results/bats/results.xml

      - store_test_results:
          path: test_results

      - store_artifacts:
          path: test_results

workflows:
  version: 2
  dockerfile_wizard:
    jobs:
      - build:
          context: org-global

      - test_image:
          context: org-global
          requires:
            - build
